GAS LISTING /tmp/cc5xKh1J.s 			page 1


   1              		.file	"main.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_Z10testMethodPv
   9              	_Z10testMethodPv:
  10              	.LFB31:
  11              		.file 1 "src/main.cpp"
   1:src/main.cpp  **** #include "../lib/hw.h"
   2:src/main.cpp  **** #include "../lib/console.h"
   3:src/main.cpp  **** #include "../h/syscall_c.hpp"
   4:src/main.cpp  **** #include "../h/MemoryAllocator.hpp"
   5:src/main.cpp  **** #include "../h/riscv.hpp"
   6:src/main.cpp  **** #include "../h/_thread.hpp"
   7:src/main.cpp  **** 
   8:src/main.cpp  **** void testMethod(void *arg)
   9:src/main.cpp  **** {
  12              		.loc 1 9 1
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23341100 		sd	ra,8(sp)
  18 0008 23308100 		sd	s0,0(sp)
  19              		.cfi_offset 1, -8
  20              		.cfi_offset 8, -16
  21 000c 13040101 		addi	s0,sp,16
  22              		.cfi_def_cfa 8, 0
  10:src/main.cpp  ****     int k = 0;
  23              		.loc 1 10 5
  24              	.LVL1:
  11:src/main.cpp  ****     k++;
  25              		.loc 1 11 5
  12:src/main.cpp  ****     __putc('t');
  26              		.loc 1 12 5
  27              		.loc 1 12 11 is_stmt 0
  28 0010 13054007 		li	a0,116
  29              	.LVL2:
  30 0014 97000000 		call	__putc@plt
  30      E7800000 
  31              	.LVL3:
  13:src/main.cpp  **** }
  32              		.loc 1 13 1
  33 001c 83308100 		ld	ra,8(sp)
  34              		.cfi_restore 1
  35 0020 03340100 		ld	s0,0(sp)
  36              		.cfi_restore 8
  37              		.cfi_def_cfa 2, 16
  38 0024 13010101 		addi	sp,sp,16
  39              		.cfi_def_cfa_offset 0
  40 0028 67800000 		jr	ra
  41              		.cfi_endproc
  42              	.LFE31:
  44              		.align	2
  45              		.globl	main
GAS LISTING /tmp/cc5xKh1J.s 			page 2


  47              	main:
  48              	.LFB32:
  14:src/main.cpp  **** 
  15:src/main.cpp  **** /*
  16:src/main.cpp  ****  * puca dispatch popSppSpie u thread wrapperu
  17:src/main.cpp  ****  * drugi alokator nije popravio
  18:src/main.cpp  ****  * drugi riscv nije popravio
  19:src/main.cpp  ****  * drugi thread nije popravio
  20:src/main.cpp  ****  * problem je sto se posle thread create ne resetuje sepc kako treba i sstatus kako treba
  21:src/main.cpp  ****  * */
  22:src/main.cpp  **** int main() {
  49              		.loc 1 22 12 is_stmt 1
  50              		.cfi_startproc
  51 002c 130101FE 		addi	sp,sp,-32
  52              		.cfi_def_cfa_offset 32
  53 0030 233C1100 		sd	ra,24(sp)
  54 0034 23388100 		sd	s0,16(sp)
  55              		.cfi_offset 1, -8
  56              		.cfi_offset 8, -16
  57 0038 13040102 		addi	s0,sp,32
  58              		.cfi_def_cfa 8, 0
  23:src/main.cpp  ****     MemoryAllocator::initialize();
  59              		.loc 1 23 5
  60              		.loc 1 23 32 is_stmt 0
  61 003c 97000000 		call	_ZN15MemoryAllocator10initializeEv@plt
  61      E7800000 
  62              	.LVL4:
  24:src/main.cpp  ****     riscv::w_stvec((uint64)&riscv::supervisorTrap);
  63              		.loc 1 24 5 is_stmt 1
  64              		.loc 1 24 19 is_stmt 0
  65 0044 97070000 		la	a5,_ZN5riscv14supervisorTrapEv
  65      83B70700 
  66              	.LVL5:
  67              	.LBB6:
  68              	.LBB7:
  69              		.file 2 "src/../h/riscv.hpp"
   1:src/../h/riscv.hpp **** //
   2:src/../h/riscv.hpp **** // Created by os on 8/20/23.
   3:src/../h/riscv.hpp **** //
   4:src/../h/riscv.hpp **** 
   5:src/../h/riscv.hpp **** #ifndef PROJECT_BASE_V1_1_RISCV_HPP
   6:src/../h/riscv.hpp **** #define PROJECT_BASE_V1_1_RISCV_HPP
   7:src/../h/riscv.hpp **** #include "../lib/hw.h"
   8:src/../h/riscv.hpp **** 
   9:src/../h/riscv.hpp **** 
  10:src/../h/riscv.hpp **** class riscv {
  11:src/../h/riscv.hpp **** public:
  12:src/../h/riscv.hpp ****     // pop sstatus.spp and sstatus.spie bits (has to be a non inline function)
  13:src/../h/riscv.hpp ****     static void popSppSpie();
  14:src/../h/riscv.hpp **** 
  15:src/../h/riscv.hpp ****     // push x3..x31 registers onto stack
  16:src/../h/riscv.hpp ****     static void pushRegisters();
  17:src/../h/riscv.hpp **** 
  18:src/../h/riscv.hpp ****     // pop x3..x31 registers onto stack
  19:src/../h/riscv.hpp ****     static void popRegisters();
  20:src/../h/riscv.hpp **** 
  21:src/../h/riscv.hpp ****     // read register scause
GAS LISTING /tmp/cc5xKh1J.s 			page 3


  22:src/../h/riscv.hpp ****     static uint64 r_scause();
  23:src/../h/riscv.hpp **** 
  24:src/../h/riscv.hpp ****     // write register scause
  25:src/../h/riscv.hpp ****     static void w_scause(uint64 scause);
  26:src/../h/riscv.hpp **** 
  27:src/../h/riscv.hpp ****     // read register sepc
  28:src/../h/riscv.hpp ****     static uint64 r_sepc();
  29:src/../h/riscv.hpp **** 
  30:src/../h/riscv.hpp ****     // write register sepc
  31:src/../h/riscv.hpp ****     static void w_sepc(uint64 sepc);
  32:src/../h/riscv.hpp **** 
  33:src/../h/riscv.hpp ****     // read register stvec
  34:src/../h/riscv.hpp ****     static uint64 r_stvec();
  35:src/../h/riscv.hpp **** 
  36:src/../h/riscv.hpp ****     // write register stvec
  37:src/../h/riscv.hpp ****     static void w_stvec(uint64 stvec);
  38:src/../h/riscv.hpp **** 
  39:src/../h/riscv.hpp ****     // read register stval
  40:src/../h/riscv.hpp ****     static uint64 r_stval();
  41:src/../h/riscv.hpp **** 
  42:src/../h/riscv.hpp ****     // write register stval
  43:src/../h/riscv.hpp ****     static void w_stval(uint64 stval);
  44:src/../h/riscv.hpp **** 
  45:src/../h/riscv.hpp ****     enum BitMaskSip
  46:src/../h/riscv.hpp ****     {
  47:src/../h/riscv.hpp ****         SIP_SSIE = (1 << 1),
  48:src/../h/riscv.hpp ****         SIP_STIE = (1 << 5),
  49:src/../h/riscv.hpp ****         SIP_SEIE = (1 << 9),
  50:src/../h/riscv.hpp ****     };
  51:src/../h/riscv.hpp **** 
  52:src/../h/riscv.hpp ****     // mask set register sip
  53:src/../h/riscv.hpp ****     static void ms_sip(uint64 mask);
  54:src/../h/riscv.hpp **** 
  55:src/../h/riscv.hpp ****     // mask clear register sip
  56:src/../h/riscv.hpp ****     static void mc_sip(uint64 mask);
  57:src/../h/riscv.hpp **** 
  58:src/../h/riscv.hpp ****     // read register sip
  59:src/../h/riscv.hpp ****     static uint64 r_sip();
  60:src/../h/riscv.hpp **** 
  61:src/../h/riscv.hpp ****     // write register sip
  62:src/../h/riscv.hpp ****     static void w_sip(uint64 sip);
  63:src/../h/riscv.hpp **** 
  64:src/../h/riscv.hpp ****     enum BitMaskSstatus
  65:src/../h/riscv.hpp ****     {
  66:src/../h/riscv.hpp ****         SSTATUS_SIE = (1 << 1),
  67:src/../h/riscv.hpp ****         SSTATUS_SPIE = (1 << 5),
  68:src/../h/riscv.hpp ****         SSTATUS_SPP = (1 << 8),
  69:src/../h/riscv.hpp ****     };
  70:src/../h/riscv.hpp **** 
  71:src/../h/riscv.hpp ****     // mask set register sstatus
  72:src/../h/riscv.hpp ****     static void ms_sstatus(uint64 mask);
  73:src/../h/riscv.hpp **** 
  74:src/../h/riscv.hpp ****     // mask clear register sstatus
  75:src/../h/riscv.hpp ****     static void mc_sstatus(uint64 mask);
  76:src/../h/riscv.hpp **** 
  77:src/../h/riscv.hpp ****     // read register sstatus
  78:src/../h/riscv.hpp ****     static uint64 r_sstatus();
GAS LISTING /tmp/cc5xKh1J.s 			page 4


  79:src/../h/riscv.hpp **** 
  80:src/../h/riscv.hpp ****     // write register sstatus
  81:src/../h/riscv.hpp ****     static void w_sstatus(uint64 sstatus);
  82:src/../h/riscv.hpp **** 
  83:src/../h/riscv.hpp ****     //supervisor trap
  84:src/../h/riscv.hpp ****     static void supervisorTrap();
  85:src/../h/riscv.hpp **** 
  86:src/../h/riscv.hpp **** private:
  87:src/../h/riscv.hpp ****     static void handleSupervisorTrap();
  88:src/../h/riscv.hpp **** 
  89:src/../h/riscv.hpp **** };
  90:src/../h/riscv.hpp **** 
  91:src/../h/riscv.hpp **** inline uint64 riscv::r_scause()
  92:src/../h/riscv.hpp **** {
  93:src/../h/riscv.hpp ****     uint64 volatile scause;
  94:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[scause], scause" : [scause] "=r"(scause));
  95:src/../h/riscv.hpp ****     return scause;
  96:src/../h/riscv.hpp **** }
  97:src/../h/riscv.hpp **** 
  98:src/../h/riscv.hpp **** inline void riscv::w_scause(uint64 scause)
  99:src/../h/riscv.hpp **** {
 100:src/../h/riscv.hpp ****     __asm__ volatile ("csrw scause, %[scause]" : : [scause] "r"(scause));
 101:src/../h/riscv.hpp **** }
 102:src/../h/riscv.hpp **** 
 103:src/../h/riscv.hpp **** inline uint64 riscv::r_sepc()
 104:src/../h/riscv.hpp **** {
 105:src/../h/riscv.hpp ****     uint64 volatile sepc;
 106:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sepc], sepc" : [sepc] "=r"(sepc));
 107:src/../h/riscv.hpp ****     return sepc;
 108:src/../h/riscv.hpp **** }
 109:src/../h/riscv.hpp **** 
 110:src/../h/riscv.hpp **** inline void riscv::w_sepc(uint64 sepc)
 111:src/../h/riscv.hpp **** {
 112:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sepc, %[sepc]" : : [sepc] "r"(sepc));
 113:src/../h/riscv.hpp **** }
 114:src/../h/riscv.hpp **** 
 115:src/../h/riscv.hpp **** inline uint64 riscv::r_stvec()
 116:src/../h/riscv.hpp **** {
 117:src/../h/riscv.hpp ****     uint64 volatile stvec;
 118:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stvec], stvec" : [stvec] "=r"(stvec));
 119:src/../h/riscv.hpp ****     return stvec;
 120:src/../h/riscv.hpp **** }
 121:src/../h/riscv.hpp **** 
 122:src/../h/riscv.hpp **** inline void riscv::w_stvec(uint64 stvec)
 123:src/../h/riscv.hpp **** {
 124:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stvec, %[stvec]" : : [stvec] "r"(stvec));
  70              		.loc 2 124 5 is_stmt 1
  71              		.loc 2 124 69 is_stmt 0
  72              	#APP
  73              	# 124 "src/../h/riscv.hpp" 1
 125              	}
  74              		csrw stvec, a5
  75              	# 0 "" 2
  76              	.LVL6:
  77              	#NO_APP
  78              	.LBE7:
  79              	.LBE6:
GAS LISTING /tmp/cc5xKh1J.s 			page 5


  25:src/main.cpp  **** 
  26:src/main.cpp  ****     _thread::running = _thread::thread_create(nullptr, nullptr, nullptr);
  80              		.loc 1 26 5 is_stmt 1
  81              		.loc 1 26 46 is_stmt 0
  82 0050 13060000 		li	a2,0
  83 0054 93050000 		li	a1,0
  84 0058 13050000 		li	a0,0
  85 005c 97000000 		call	_ZN7_thread13thread_createEPFvPvES0_S0_@plt
  85      E7800000 
  86              	.LVL7:
  87              		.loc 1 26 22
  88 0064 97070000 		la	a5,_ZN7_thread7runningE
  88      83B70700 
  89 006c 23B0A700 		sd	a0,0(a5)
  27:src/main.cpp  **** 
  28:src/main.cpp  ****     // ovako je nama ne znamo zasto riscv::ms_sstatus(riscv::SSTATUS_SPIE | riscv::SSTATUS_SPP);
  29:src/main.cpp  ****     // ovako je lab ne razumemo zasto
  30:src/main.cpp  ****     riscv::ms_sstatus(riscv::SSTATUS_SIE);
  90              		.loc 1 30 5 is_stmt 1
  91              	.LVL8:
  92              	.LBB8:
  93              	.LBB9:
 126:src/../h/riscv.hpp **** 
 127:src/../h/riscv.hpp **** inline uint64 riscv::r_stval()
 128:src/../h/riscv.hpp **** {
 129:src/../h/riscv.hpp ****     uint64 volatile stval;
 130:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[stval], stval" : [stval] "=r"(stval));
 131:src/../h/riscv.hpp ****     return stval;
 132:src/../h/riscv.hpp **** }
 133:src/../h/riscv.hpp **** 
 134:src/../h/riscv.hpp **** inline void riscv::w_stval(uint64 stval)
 135:src/../h/riscv.hpp **** {
 136:src/../h/riscv.hpp ****     __asm__ volatile ("csrw stval, %[stval]" : : [stval] "r"(stval));
 137:src/../h/riscv.hpp **** }
 138:src/../h/riscv.hpp **** 
 139:src/../h/riscv.hpp **** inline void riscv::ms_sip(uint64 mask)
 140:src/../h/riscv.hpp **** {
 141:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sip, %[mask]" : : [mask] "r"(mask));
 142:src/../h/riscv.hpp **** }
 143:src/../h/riscv.hpp **** 
 144:src/../h/riscv.hpp **** inline void riscv::mc_sip(uint64 mask)
 145:src/../h/riscv.hpp **** {
 146:src/../h/riscv.hpp ****     __asm__ volatile ("csrc sip, %[mask]" : : [mask] "r"(mask));
 147:src/../h/riscv.hpp **** }
 148:src/../h/riscv.hpp **** 
 149:src/../h/riscv.hpp **** inline uint64 riscv::r_sip()
 150:src/../h/riscv.hpp **** {
 151:src/../h/riscv.hpp ****     uint64 volatile sip;
 152:src/../h/riscv.hpp ****     __asm__ volatile ("csrr %[sip], sip" : [sip] "=r"(sip));
 153:src/../h/riscv.hpp ****     return sip;
 154:src/../h/riscv.hpp **** }
 155:src/../h/riscv.hpp **** 
 156:src/../h/riscv.hpp **** inline void riscv::w_sip(uint64 sip)
 157:src/../h/riscv.hpp **** {
 158:src/../h/riscv.hpp ****     __asm__ volatile ("csrw sip, %[sip]" : : [sip] "r"(sip));
 159:src/../h/riscv.hpp **** }
 160:src/../h/riscv.hpp **** 
GAS LISTING /tmp/cc5xKh1J.s 			page 6


 161:src/../h/riscv.hpp **** inline void riscv::ms_sstatus(uint64 mask)
 162:src/../h/riscv.hpp **** {
 163:src/../h/riscv.hpp ****     __asm__ volatile ("csrs sstatus, %[mask]" : : [mask] "r"(mask));
  94              		.loc 2 163 5
  95              		.loc 2 163 68 is_stmt 0
  96 0070 93072000 		li	a5,2
  97              	#APP
  98              	# 163 "src/../h/riscv.hpp" 1
 164              	}
  99              		csrs sstatus, a5
 100              	# 0 "" 2
 101              	.LVL9:
 102              	#NO_APP
 103              	.LBE9:
 104              	.LBE8:
  31:src/main.cpp  ****     // upisuje 45 i poziva syscall 45 - getPid()
  32:src/main.cpp  ****     __asm__ volatile ("mv a0, %0" : : "r" (45));
 105              		.loc 1 32 5 is_stmt 1
 106              		.loc 1 32 48 is_stmt 0
 107 0078 9307D002 		li	a5,45
 108              	#APP
 109              	# 32 "src/main.cpp" 1
  33              	    __asm__ volatile ("ecall");
 110              		mv a0, a5
 111              	# 0 "" 2
 112              		.loc 1 33 5 is_stmt 1
 113              		.loc 1 33 31 is_stmt 0
 114              	# 33 "src/main.cpp" 1
  34              	    
  35:src/main.cpp  ****     thread_t handle = nullptr;
 115              		ecall
 116              	# 0 "" 2
 117              		.loc 1 35 5 is_stmt 1
 118              		.loc 1 35 14 is_stmt 0
 119              	#NO_APP
 120 0084 233404FE 		sd	zero,-24(s0)
  36:src/main.cpp  ****     thread_create(&handle, testMethod, nullptr);
 121              		.loc 1 36 5 is_stmt 1
 122              		.loc 1 36 18 is_stmt 0
 123 0088 13060000 		li	a2,0
 124 008c 97050000 		lla	a1,_Z10testMethodPv
 124      93850500 
 125 0094 130584FE 		addi	a0,s0,-24
 126 0098 97000000 		call	_Z13thread_createPP7_threadPFvPvES2_@plt
 126      E7800000 
 127              	.LVL10:
  37:src/main.cpp  ****     //__asm__ volatile ("csrw sepc, %0" : : "r" (0));
  38:src/main.cpp  ****     //__asm__ volatile ("csrw sstatus, %0" : : "r" (0x120));
  39:src/main.cpp  ****     thread_dispatch();
 128              		.loc 1 39 5 is_stmt 1
 129              		.loc 1 39 20 is_stmt 0
 130 00a0 97000000 		call	_Z15thread_dispatchv@plt
 130      E7800000 
 131              	.LVL11:
  40:src/main.cpp  ****     return 0;
 132              		.loc 1 40 5 is_stmt 1
  41:src/main.cpp  **** }...
GAS LISTING /tmp/cc5xKh1J.s 			page 7


 133              		.loc 1 41 1 is_stmt 0
 134 00a8 13050000 		li	a0,0
 135 00ac 83308101 		ld	ra,24(sp)
 136              		.cfi_restore 1
 137 00b0 03340101 		ld	s0,16(sp)
 138              		.cfi_restore 8
 139              		.cfi_def_cfa 2, 32
 140 00b4 13010102 		addi	sp,sp,32
 141              		.cfi_def_cfa_offset 0
 142 00b8 67800000 		jr	ra
 143              		.cfi_endproc
 144              	.LFE32:
 146              	.Letext0:
 147              		.file 3 "src/../lib/hw.h"
 148              		.file 4 "src/../h/syscall_c.hpp"
 149              		.file 5 "src/../h/_thread.hpp"
 150              		.file 6 "src/../h/MemoryAllocator.hpp"
 151              		.file 7 "src/../lib/console.h"
GAS LISTING /tmp/cc5xKh1J.s 			page 8


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.cpp
     /tmp/cc5xKh1J.s:9      .text:0000000000000000 _Z10testMethodPv
     /tmp/cc5xKh1J.s:13     .text:0000000000000000 .L0 
     /tmp/cc5xKh1J.s:15     .text:0000000000000000 .L0 
     /tmp/cc5xKh1J.s:16     .text:0000000000000004 .L0 
     /tmp/cc5xKh1J.s:19     .text:000000000000000c .L0 
     /tmp/cc5xKh1J.s:20     .text:000000000000000c .L0 
     /tmp/cc5xKh1J.s:22     .text:0000000000000010 .L0 
     /tmp/cc5xKh1J.s:25     .text:0000000000000010 .L0 
     /tmp/cc5xKh1J.s:26     .text:0000000000000010 .L0 
     /tmp/cc5xKh1J.s:27     .text:0000000000000010 .L0 
     /tmp/cc5xKh1J.s:28     .text:0000000000000010 .L0 
     /tmp/cc5xKh1J.s:33     .text:000000000000001c .L0 
     /tmp/cc5xKh1J.s:34     .text:0000000000000020 .L0 
     /tmp/cc5xKh1J.s:36     .text:0000000000000024 .L0 
     /tmp/cc5xKh1J.s:37     .text:0000000000000024 .L0 
     /tmp/cc5xKh1J.s:39     .text:0000000000000028 .L0 
     /tmp/cc5xKh1J.s:41     .text:000000000000002c .L0 
     /tmp/cc5xKh1J.s:47     .text:000000000000002c main
     /tmp/cc5xKh1J.s:50     .text:000000000000002c .L0 
     /tmp/cc5xKh1J.s:51     .text:000000000000002c .L0 
     /tmp/cc5xKh1J.s:52     .text:0000000000000030 .L0 
     /tmp/cc5xKh1J.s:55     .text:0000000000000038 .L0 
     /tmp/cc5xKh1J.s:56     .text:0000000000000038 .L0 
     /tmp/cc5xKh1J.s:58     .text:000000000000003c .L0 
     /tmp/cc5xKh1J.s:60     .text:000000000000003c .L0 
     /tmp/cc5xKh1J.s:61     .text:000000000000003c .L0 
     /tmp/cc5xKh1J.s:64     .text:0000000000000044 .L0 
     /tmp/cc5xKh1J.s:65     .text:0000000000000044 .L0 
     /tmp/cc5xKh1J.s:71     .text:000000000000004c .L0 
  src/../h/riscv.hpp:124    .text:000000000000004c .L0 
     /tmp/cc5xKh1J.s:81     .text:0000000000000050 .L0 
     /tmp/cc5xKh1J.s:82     .text:0000000000000050 .L0 
     /tmp/cc5xKh1J.s:88     .text:0000000000000064 .L0 
     /tmp/cc5xKh1J.s:94     .text:0000000000000070 .L0 
     /tmp/cc5xKh1J.s:95     .text:0000000000000070 .L0 
     /tmp/cc5xKh1J.s:96     .text:0000000000000070 .L0 
     /tmp/cc5xKh1J.s:106    .text:0000000000000078 .L0 
     /tmp/cc5xKh1J.s:107    .text:0000000000000078 .L0 
     /tmp/cc5xKh1J.s:113    .text:0000000000000080 .L0 
        src/main.cpp:33     .text:0000000000000080 .L0 
     /tmp/cc5xKh1J.s:118    .text:0000000000000084 .L0 
     /tmp/cc5xKh1J.s:120    .text:0000000000000084 .L0 
     /tmp/cc5xKh1J.s:122    .text:0000000000000088 .L0 
     /tmp/cc5xKh1J.s:123    .text:0000000000000088 .L0 
     /tmp/cc5xKh1J.s:129    .text:00000000000000a0 .L0 
     /tmp/cc5xKh1J.s:130    .text:00000000000000a0 .L0 
     /tmp/cc5xKh1J.s:133    .text:00000000000000a8 .L0 
     /tmp/cc5xKh1J.s:134    .text:00000000000000a8 .L0 
     /tmp/cc5xKh1J.s:136    .text:00000000000000b0 .L0 
     /tmp/cc5xKh1J.s:138    .text:00000000000000b4 .L0 
     /tmp/cc5xKh1J.s:139    .text:00000000000000b4 .L0 
     /tmp/cc5xKh1J.s:141    .text:00000000000000b8 .L0 
     /tmp/cc5xKh1J.s:143    .text:00000000000000bc .L0 
     /tmp/cc5xKh1J.s:152    .text:00000000000000bc .L0 
     /tmp/cc5xKh1J.s:65     .text:0000000000000044 .L0 
GAS LISTING /tmp/cc5xKh1J.s 			page 9


     /tmp/cc5xKh1J.s:88     .text:0000000000000064 .L0 
     /tmp/cc5xKh1J.s:124    .text:000000000000008c .L0 
     /tmp/cc5xKh1J.s:979    .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/cc5xKh1J.s:1956   .debug_str:00000000000005d4 .LASF107
     /tmp/cc5xKh1J.s:1858   .debug_str:00000000000002d3 .LASF108
     /tmp/cc5xKh1J.s:1798   .debug_str:000000000000010b .LASF109
     /tmp/cc5xKh1J.s:5      .text:0000000000000000 .Ltext0
     /tmp/cc5xKh1J.s:146    .text:00000000000000bc .Letext0
     /tmp/cc5xKh1J.s:1758   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/cc5xKh1J.s:1886   .debug_str:00000000000003ce .LASF0
     /tmp/cc5xKh1J.s:1902   .debug_str:0000000000000460 .LASF1
     /tmp/cc5xKh1J.s:1872   .debug_str:0000000000000358 .LASF2
     /tmp/cc5xKh1J.s:1844   .debug_str:0000000000000274 .LASF4
     /tmp/cc5xKh1J.s:1932   .debug_str:000000000000052e .LASF3
     /tmp/cc5xKh1J.s:1782   .debug_str:000000000000008f .LASF5
     /tmp/cc5xKh1J.s:1906   .debug_str:000000000000047a .LASF6
     /tmp/cc5xKh1J.s:1884   .debug_str:00000000000003bb .LASF7
     /tmp/cc5xKh1J.s:1974   .debug_str:00000000000006f3 .LASF8
     /tmp/cc5xKh1J.s:1832   .debug_str:0000000000000221 .LASF9
     /tmp/cc5xKh1J.s:1918   .debug_str:00000000000004e2 .LASF10
     /tmp/cc5xKh1J.s:1960   .debug_str:00000000000006a2 .LASF11
     /tmp/cc5xKh1J.s:1786   .debug_str:00000000000000a2 .LASF12
     /tmp/cc5xKh1J.s:1766   .debug_str:0000000000000023 .LASF13
     /tmp/cc5xKh1J.s:1790   .debug_str:00000000000000bc .LASF14
     /tmp/cc5xKh1J.s:1930   .debug_str:0000000000000518 .LASF15
     /tmp/cc5xKh1J.s:1800   .debug_str:000000000000012e .LASF16
     /tmp/cc5xKh1J.s:1760   .debug_str:0000000000000000 .LASF17
     /tmp/cc5xKh1J.s:1842   .debug_str:000000000000026c .LASF32
     /tmp/cc5xKh1J.s:1770   .debug_str:000000000000003c .LASF110
     /tmp/cc5xKh1J.s:1826   .debug_str:00000000000001ef .LASF18
     /tmp/cc5xKh1J.s:1812   .debug_str:000000000000018d .LASF19
     /tmp/cc5xKh1J.s:1794   .debug_str:00000000000000dc .LASF20
     /tmp/cc5xKh1J.s:1796   .debug_str:00000000000000ec .LASF22
     /tmp/cc5xKh1J.s:1772   .debug_str:0000000000000044 .LASF63
     /tmp/cc5xKh1J.s:1822   .debug_str:00000000000001cc .LASF65
     /tmp/cc5xKh1J.s:1802   .debug_str:0000000000000144 .LASF28
     /tmp/cc5xKh1J.s:1874   .debug_str:0000000000000366 .LASF30
     /tmp/cc5xKh1J.s:1924   .debug_str:0000000000000501 .LASF111
     /tmp/cc5xKh1J.s:1776   .debug_str:000000000000006c .LASF21
     /tmp/cc5xKh1J.s:1898   .debug_str:000000000000042f .LASF23
     /tmp/cc5xKh1J.s:1954   .debug_str:00000000000005c8 .LASF24
     /tmp/cc5xKh1J.s:1980   .debug_str:0000000000000726 .LASF26
     /tmp/cc5xKh1J.s:1978   .debug_str:0000000000000718 .LASF25
     /tmp/cc5xKh1J.s:1866   .debug_str:0000000000000311 .LASF27
     /tmp/cc5xKh1J.s:1964   .debug_str:00000000000006bf .LASF29
     /tmp/cc5xKh1J.s:1908   .debug_str:000000000000048d .LASF31
     /tmp/cc5xKh1J.s:1896   .debug_str:0000000000000414 .LASF33
     /tmp/cc5xKh1J.s:1972   .debug_str:00000000000006ea .LASF34
     /tmp/cc5xKh1J.s:1848   .debug_str:0000000000000290 .LASF35
     /tmp/cc5xKh1J.s:1852   .debug_str:00000000000002a0 .LASF36
     /tmp/cc5xKh1J.s:1892   .debug_str:0000000000000409 .LASF37
     /tmp/cc5xKh1J.s:1958   .debug_str:0000000000000698 .LASF38
     /tmp/cc5xKh1J.s:1894   .debug_str:000000000000040f .LASF39
     /tmp/cc5xKh1J.s:1778   .debug_str:000000000000007b .LASF40
     /tmp/cc5xKh1J.s:1888   .debug_str:00000000000003db .LASF112
     /tmp/cc5xKh1J.s:1948   .debug_str:00000000000005b2 .LASF41
     /tmp/cc5xKh1J.s:1878   .debug_str:0000000000000395 .LASF42
GAS LISTING /tmp/cc5xKh1J.s 			page 10


     /tmp/cc5xKh1J.s:1990   .debug_str:0000000000000798 .LASF43
     /tmp/cc5xKh1J.s:1868   .debug_str:000000000000033d .LASF44
     /tmp/cc5xKh1J.s:1934   .debug_str:0000000000000540 .LASF45
     /tmp/cc5xKh1J.s:1944   .debug_str:000000000000057d .LASF46
     /tmp/cc5xKh1J.s:1920   .debug_str:00000000000004f1 .LASF47
     /tmp/cc5xKh1J.s:1830   .debug_str:0000000000000200 .LASF48
     /tmp/cc5xKh1J.s:1870   .debug_str:000000000000034d .LASF49
     /tmp/cc5xKh1J.s:1984   .debug_str:0000000000000757 .LASF50
     /tmp/cc5xKh1J.s:1856   .debug_str:00000000000002ca .LASF51
     /tmp/cc5xKh1J.s:1962   .debug_str:00000000000006b1 .LASF52
     /tmp/cc5xKh1J.s:1936   .debug_str:000000000000054a .LASF53
     /tmp/cc5xKh1J.s:1860   .debug_str:00000000000002e0 .LASF113
     /tmp/cc5xKh1J.s:1950   .debug_str:00000000000005b7 .LASF54
     /tmp/cc5xKh1J.s:1862   .debug_str:00000000000002ef .LASF55
     /tmp/cc5xKh1J.s:1784   .debug_str:0000000000000096 .LASF56
     /tmp/cc5xKh1J.s:1926   .debug_str:0000000000000506 .LASF57
     /tmp/cc5xKh1J.s:1992   .debug_str:000000000000079d .LASF58
     /tmp/cc5xKh1J.s:1780   .debug_str:0000000000000081 .LASF59
     /tmp/cc5xKh1J.s:1880   .debug_str:000000000000039a .LASF60
     /tmp/cc5xKh1J.s:1818   .debug_str:00000000000001a7 .LASF61
     /tmp/cc5xKh1J.s:1910   .debug_str:000000000000049d .LASF62
     /tmp/cc5xKh1J.s:1768   .debug_str:0000000000000033 .LASF64
     /tmp/cc5xKh1J.s:1916   .debug_str:00000000000004cd .LASF66
     /tmp/cc5xKh1J.s:1810   .debug_str:0000000000000184 .LASF67
     /tmp/cc5xKh1J.s:1846   .debug_str:000000000000027b .LASF68
     /tmp/cc5xKh1J.s:1876   .debug_str:000000000000038e .LASF69
     /tmp/cc5xKh1J.s:1986   .debug_str:000000000000077a .LASF70
     /tmp/cc5xKh1J.s:1942   .debug_str:0000000000000576 .LASF71
     /tmp/cc5xKh1J.s:1938   .debug_str:0000000000000550 .LASF72
     /tmp/cc5xKh1J.s:1824   .debug_str:00000000000001e7 .LASF73
     /tmp/cc5xKh1J.s:1970   .debug_str:00000000000006d6 .LASF74
     /tmp/cc5xKh1J.s:1762   .debug_str:0000000000000009 .LASF75
     /tmp/cc5xKh1J.s:1792   .debug_str:00000000000000c8 .LASF76
     /tmp/cc5xKh1J.s:1814   .debug_str:0000000000000195 .LASF77
     /tmp/cc5xKh1J.s:1946   .debug_str:000000000000059e .LASF78
     /tmp/cc5xKh1J.s:1840   .debug_str:0000000000000264 .LASF79
     /tmp/cc5xKh1J.s:1982   .debug_str:0000000000000743 .LASF80
     /tmp/cc5xKh1J.s:1922   .debug_str:00000000000004fa .LASF81
     /tmp/cc5xKh1J.s:1940   .debug_str:0000000000000563 .LASF82
     /tmp/cc5xKh1J.s:1968   .debug_str:00000000000006cf .LASF83
     /tmp/cc5xKh1J.s:1900   .debug_str:000000000000044d .LASF84
     /tmp/cc5xKh1J.s:1828   .debug_str:00000000000001fa .LASF85
     /tmp/cc5xKh1J.s:1836   .debug_str:0000000000000247 .LASF86
     /tmp/cc5xKh1J.s:1808   .debug_str:000000000000017e .LASF87
     /tmp/cc5xKh1J.s:1764   .debug_str:0000000000000011 .LASF88
     /tmp/cc5xKh1J.s:1988   .debug_str:000000000000078d .LASF89
     /tmp/cc5xKh1J.s:1820   .debug_str:00000000000001b4 .LASF90
     /tmp/cc5xKh1J.s:1850   .debug_str:0000000000000295 .LASF91
     /tmp/cc5xKh1J.s:1834   .debug_str:000000000000022f .LASF92
     /tmp/cc5xKh1J.s:1788   .debug_str:00000000000000b2 .LASF93
     /tmp/cc5xKh1J.s:1806   .debug_str:0000000000000168 .LASF94
     /tmp/cc5xKh1J.s:1816   .debug_str:000000000000019d .LASF95
     /tmp/cc5xKh1J.s:1804   .debug_str:0000000000000152 .LASF96
     /tmp/cc5xKh1J.s:1994   .debug_str:00000000000007b5 .LASF97
     /tmp/cc5xKh1J.s:1774   .debug_str:0000000000000050 .LASF98
     /tmp/cc5xKh1J.s:1976   .debug_str:0000000000000703 .LASF114
     /tmp/cc5xKh1J.s:1854   .debug_str:00000000000002a8 .LASF115
GAS LISTING /tmp/cc5xKh1J.s 			page 11


     /tmp/cc5xKh1J.s:1966   .debug_str:00000000000006c8 .LASF116
     /tmp/cc5xKh1J.s:1914   .debug_str:00000000000004c8 .LASF100
     /tmp/cc5xKh1J.s:48     .text:000000000000002c .LFB32
     /tmp/cc5xKh1J.s:144    .text:00000000000000bc .LFE32
     /tmp/cc5xKh1J.s:1904   .debug_str:0000000000000473 .LASF99
     /tmp/cc5xKh1J.s:67     .text:000000000000004c .LBB6
     /tmp/cc5xKh1J.s:79     .text:0000000000000050 .LBE6
     /tmp/cc5xKh1J.s:92     .text:0000000000000070 .LBB8
     /tmp/cc5xKh1J.s:104    .text:0000000000000078 .LBE8
     /tmp/cc5xKh1J.s:1723   .debug_loc:0000000000000000 .LLST1
     /tmp/cc5xKh1J.s:62     .text:0000000000000044 .LVL4
     /tmp/cc5xKh1J.s:86     .text:0000000000000064 .LVL7
     /tmp/cc5xKh1J.s:127    .text:00000000000000a0 .LVL10
     /tmp/cc5xKh1J.s:131    .text:00000000000000a8 .LVL11
     /tmp/cc5xKh1J.s:1838   .debug_str:0000000000000259 .LASF101
     /tmp/cc5xKh1J.s:1912   .debug_str:00000000000004b7 .LASF117
     /tmp/cc5xKh1J.s:10     .text:0000000000000000 .LFB31
     /tmp/cc5xKh1J.s:42     .text:000000000000002c .LFE31
     /tmp/cc5xKh1J.s:1731   .debug_loc:0000000000000024 .LLST0
     /tmp/cc5xKh1J.s:31     .text:000000000000001c .LVL3
     /tmp/cc5xKh1J.s:1952   .debug_str:00000000000005c3 .LASF102
     /tmp/cc5xKh1J.s:1882   .debug_str:00000000000003b5 .LASF103
     /tmp/cc5xKh1J.s:1890   .debug_str:00000000000003e4 .LASF104
     /tmp/cc5xKh1J.s:1864   .debug_str:00000000000002fc .LASF105
     /tmp/cc5xKh1J.s:1928   .debug_str:0000000000000511 .LASF106
     /tmp/cc5xKh1J.s:91     .text:0000000000000070 .LVL8
     /tmp/cc5xKh1J.s:101    .text:0000000000000078 .LVL9
     /tmp/cc5xKh1J.s:14     .text:0000000000000000 .LVL0
     /tmp/cc5xKh1J.s:29     .text:0000000000000014 .LVL2
     /tmp/cc5xKh1J.s:153    .debug_info:0000000000000000 .Ldebug_info0

UNDEFINED SYMBOLS
__putc
_ZN15MemoryAllocator10initializeEv
_ZN5riscv14supervisorTrapEv
_ZN7_thread13thread_createEPFvPvES0_S0_
_ZN7_thread7runningE
_Z13thread_createPP7_threadPFvPvES2_
_Z15thread_dispatchv
